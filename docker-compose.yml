version: "3"

# ============================================
# Network
# ============================================
networks:
  my-network:
    driver: bridge

# =====================================================================================
# ================================== S E R V I C E S ==================================
# =====================================================================================
services:


  # ============================================
  # CONSUL
  # ============================================
  consul:
    image: consul:1.11.3
    container_name: consul
    ports:
      - "8500:8500"
    networks:
      - my-network
    restart: always


  # ============================================
  # Service d'AUTHENTIFICATION
  # ============================================
  auth-service:
    hostname: auth-service
    build:
        context: ./auth-service
        dockerfile: Dockerfile
    ports:
      - "3333:3333"
    depends_on:
      - auth_db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://auth_db:3306/auth_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    networks:
      - my-network
    restart: always


  # ============================================
  # Base de données du service d'AUTHENTIFICATION
  # ============================================
  auth_db:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: auth_db
    ports:
      - "3306:3306"
    networks:
      - my-network
    restart: always


  # ============================================
  # Service de PROFIL
  # ============================================
  profile-service:
    hostname: profile-service
    build:
      context: ./profile-service
      dockerfile: Dockerfile
    ports:
      - "3334:80"
    depends_on:
      - profile_db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://profile_db:3307/profile_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    networks:
      - my-network
    restart: always


  # ============================================
  # Base de données du service de PROFIL
  # ============================================
  profile_db:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: profile_db
    ports:
      - "3307:3307"
    networks:
      - my-network
    restart: always


  # ============================================
  # Service de PUBLICATION
  # ============================================
  pouet-service:
    hostname: pouet-service
    build:
      context: ./pouet-service
      dockerfile: Dockerfile
    ports:
      - "3335:3335"
    depends_on:
      - pouet_db
    environment:
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      DB_HOST: pouet_db
      DB_PORT: 27017
      DB_NAME: pouet_db
      DB_USER: root
      DB_PASSWORD: password
      DB_COLLECTION: pouets
    networks:
      - my-network
    restart: always


  # ============================================
  # Base de données du service de PUBLICATION
  # ============================================
  pouet_db:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: pouet_db
      MONGO_INITDB_COLLECTION: pouets
    ports:
      - "27018:27017"
    networks:
      - my-network
    restart: always


  # ============================================
  # Service de NOTIFICATION
  # ============================================
  notification-service:
    hostname: notification-service
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "3337:3337"
    depends_on:
      - notification_db
    environment:
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      DB_HOST: notification_db
      DB_PORT: 27017
      DB_NAME: notification_db
      DB_USER: root
      DB_PASSWORD: password
      DB_COLLECTION: notifications
    networks:
      - my-network
    restart: always


  # ============================================
  # Base de données du service de NOTIFICATION
  # ============================================
  notification_db:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: notification_db
      MONGO_INITDB_COLLECTION: notifications
    ports:
      - "27019:27017"
    networks:
      - my-network
    restart: always


  # ============================================
  # Service de MESSAGERIE
  # ============================================
  messaging-service:
    hostname: messaging-service
    build:
      context: ./messaging-service
      dockerfile: Dockerfile
    ports:
      - "3336:3336"
    depends_on:
      - messaging_db
    environment:
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      DB_HOST: messaging_db
      DB_PORT: 27017
      DB_NAME: messaging_db
      DB_USER: root
      DB_PASSWORD: password
      DB_COLLECTION: messages
    networks:
      - my-network
    restart: always


  # ============================================
  # Base de données du service de MESSAGERIE
  # ============================================
  messaging_db:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: messaging_db
      MONGO_INITDB_COLLECTION: messages
    ports:
      - "27020:27017"
    networks:
      - my-network
    restart: always


  # ============================================
  # GATEWAY
  # ============================================
  gateway:
    image: gateway
    hostname: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - consul
    networks:
      - my-network
    restart: always


  # ============================================
  # RABBITMQ
  # ============================================
  rabbitmq:
      image: rabbitmq:3-management
      hostname: rabbitmq
      ports:
      - "15672:15672"
      - "5672:5672"
      networks:
      - my-network
      restart: always